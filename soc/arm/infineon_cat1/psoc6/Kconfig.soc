# Copyright (c) 2021 Cypress Semiconductor Corporation.
# SPDX-License-Identifier: Apache-2.0

# Infineon PSoC6 die
config SOC_DIE_PSOC6
    bool
    select ARM
    select CPU_CORTEX_M4
    select SOC_FAMILY_CAT1A
    select HAS_INFINEON_CAT1_DRIVERS

# Infineon PSoC6_01 die
config SOC_DIE_PSOC6_01
    bool
    select SOC_DIE_PSOC6

# Infineon PSoC6_02 die
config SOC_DIE_PSOC6_02
    bool
    select SOC_DIE_PSOC6

# Infineon PSoC6_03 die
config SOC_DIE_PSOC6_03
    bool
    select SOC_DIE_PSOC6

# Infineon PSoC6_04 die
config SOC_DIE_PSOC6_04
    bool
    select SOC_DIE_PSOC6


# Infineon MCUs
choice
    prompt "MPN"
    optional
osource "soc/arm/infineon_cat1/psoc6/Kconfig.soc.psoc6_*"
endchoice

if SOC_FAMILY_CAT1A

## PSoC™ 6 Cortex M0+ prebuilt images
choice
    prompt "PSoC™ 6 Cortex M0+ prebuilt images"
    help
      Prebuilt application images are executed on the Cortex-M0+ core of the PSoC™ 6 dual - core MCU.
      The images are provided as C arrays ready to be compiled as part of the Cortex-M4 application.
      The Cortex-M0+ application code is placed to internal flash by the Cortex-M4 linker script.

config SOC_PSOC6_CM0P_SLEEP
    bool "DeepSleep"
    help
      DeepSleep prebuilt application image is executed on the Cortex-M0+ core of the PSoC™ 6 BLE
      dual-core MCU.The image is provided as C array ready to be compiled as part of the Cortex-M4
      application. The Cortex-M0+ application code is placed to internal flash by the Cortex-M4
      linker script.

config SOC_PSOC6_CM0P_BLE
    bool "BLESS Controller"
    depends on SOC_SERIES_PSOC63
    help
      Pre-compiled BLESS Controller image executed on the Cortex-M0+ core of the PSoC™ 6 dual-core MCU.
      The image is provided as C array ready to be compiled as part of the Cortex M4 application. 
      The Cortex-M0+ application code is placed to internal flash by the Cortex M4 linker script.
      This image is used only in BLE dual CPU mode.In this mode, the BLE functionality is split between
      CM0 + (controller) and CM4 (host). It uses IPC for communication between two CPU cores where both the
      controller and host run.

config SOC_PSOC6_CM0P_CRYPTO
    bool "Crypto server"
    help
      Crypto server prebuilt application image is executed on the Cortex-M0+ core of the PSoC™ 6
      dual-core MCU. The image is provided as C array ready to be compiled as part of the Cortex-M4
      application. The Cortex-M0+ application code is placed to internal flash by the Cortex-M4
      linker script.

config SOC_PSOC6_CM0P_SECURE
    bool "Secure"
    depends on SOC_SERIES_PSOC64
    help
      Secure prebuilt application image is required to be executed on the Cortex-M0+ core of the PSoC™ 64
      dual-core MCU. Users of PSoC™ 64 Secure Boot devices have multi image boot scheme. In this case the
      Bootloader assumes 2 images are present in system - CM0p and CM4 in MCUBoot compatible format.
      All applications developed for CM4 need to be combined with Secure CM0p prebuild image. 
      This is a requirement of Secure Boot system architecture.

endchoice

endif # SOC_FAMILY_CAT1A
